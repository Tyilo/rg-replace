#!/usr/bin/env python3
import logging
import os
import shutil
import subprocess
import sys
from collections import defaultdict
from pathlib import Path
from tempfile import TemporaryFile

logging.basicConfig(format="%(levelname)s: %(message)s")

rg_args = sys.argv[1:]
if "--replace" not in sys.argv:
    logging.warning(
        "--replace not found in arguments. This utility will probably do nothing."
    )


p = subprocess.run(["rg", "--null", "--line-number", *rg_args], stdout=subprocess.PIPE,)
if p.returncode != 0:
    logging.error(f"rg exited with code {p.returncode}")
    sys.exit(p.returncode)

replacements = defaultdict(dict)
for l in p.stdout.splitlines():
    fname, rest = l.split(b"\x00", maxsplit=1)
    line_number, line = rest.split(b":", maxsplit=1)

    fpath = Path(os.fsdecode(fname))
    line_number = int(line_number)

    replacements[fpath][line_number] = line + b"\n"


for fpath, freplacements in replacements.items():
    with fpath.open("r+b") as f_in, TemporaryFile() as f_out:
        for i, l in enumerate(f_in):
            f_out.write(freplacements.get(i + 1, l))

        f_in.seek(0)
        f_out.seek(0)
        shutil.copyfileobj(f_out, f_in)
        f_in.truncate()

    print("Updated", fpath)
